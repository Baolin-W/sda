var searchIndex = {};
searchIndex["sda_protocol"] = {"doc":"This crate describes the common interface of SDA, including the resources, methods, and message format exposed by an SDA service.","items":[[3,"SdaError","sda_protocol","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[3,"VerificationKeyId","","Unique verification key identifier.",null,null],[12,"0","","",1,null],[3,"Agent","","Fundamental description of agents in the system, i.e. participants, clerks, recipients, and admins.",null,null],[12,"id","","Unique identifier of agent.",2,null],[12,"verification_key","","Key used for verifying signed resources from agent.",2,null],[3,"AgentId","","Unique agent identifier.",null,null],[12,"0","","",3,null],[3,"Profile","","Extended profile of an agent, providing information intended for increasing trust such as name and social handles.",null,null],[12,"owner","","Agent to which profile belongs.",4,null],[12,"name","","Name or alias.",4,null],[12,"twitter_id","","Twitter handle.",4,null],[12,"keybase_id","","Keybase handle.",4,null],[12,"website","","Public website.",4,null],[3,"EncryptionKeyId","","Unique encryption key identifier.",null,null],[12,"0","","",5,null],[3,"Aggregation","","Description of an aggregation.",null,null],[12,"id","","Unique identifier of aggregation.",6,null],[12,"title","","Title, e.g. explaining purpose of the aggregation.",6,null],[12,"vector_dimension","","Fixed dimension of input and output vectors.",6,null],[12,"modulus","","The group in which all operations are performed.",6,null],[12,"recipient","","Recipient of output vector.",6,null],[12,"recipient_key","","Encryption key to be used for encryptions intended for the recipient.",6,null],[12,"masking_scheme","","Scheme and parameters used for masking secrets between the recipient and the committee.",6,null],[12,"committee_sharing_scheme","","Scheme and parameters used for sharing masked secrets between the clerks in the committee.",6,null],[12,"recipient_encryption_scheme","","Scheme and parameters used for encrypting masks for the recipient.",6,null],[12,"committee_encryption_scheme","","Scheme and parameters used for encrypting shares of masked secrets for the committee.",6,null],[3,"AggregationId","","Unique aggregation identifier.",null,null],[12,"0","","",7,null],[3,"ClerkCandidate","","Suggested clerk for a given aggregation.",null,null],[12,"id","","Clerk identifier.",8,null],[12,"keys","","Available and matching encryption keys for candidate.",8,null],[3,"Committee","","Description of committee elected for an aggregation.",null,null],[12,"aggregation","","Aggregation identifier.",9,null],[12,"clerks_and_keys","","Clerks in the committee, with corresponding encryption key to use for encrypting messages for each.",9,null],[3,"Participation","","Description of a participant's input to an aggregation.",null,null],[12,"id","","Unique identifier of this participation.",10,null],[12,"participant","","Participant identifier.",10,null],[12,"aggregation","","Aggregation identifier.",10,null],[12,"recipient_encryption","","Encryption intended for recipient.",10,null],[12,"clerk_encryptions","","Encryptions intended for the clerks in the committee.",10,null],[3,"ParticipationId","","Unique participation identifier.",null,null],[12,"0","","",11,null],[3,"Snapshot","","Captures a subset of the current participations to an agggregation in order to create a consistent set of clerkable shares.",null,null],[12,"id","","Unique identifiers.",12,null],[12,"aggregation","","Associated aggregation.",12,null],[3,"SnapshotId","","Unique snapshot identifier.",null,null],[12,"0","","",13,null],[3,"ClerkingJob","","Partial aggregation job to be performed by a clerk.",null,null],[12,"id","","Unique identifier.",14,null],[12,"clerk","","Intended clerk.",14,null],[12,"aggregation","","Associated aggregation.",14,null],[12,"snapshot","","Associated snapshot of aggregation.",14,null],[12,"encryptions","","Encryptions containing shares for clerking.",14,null],[3,"ClerkingJobId","","Unique job identifier.",null,null],[12,"0","","",15,null],[3,"ClerkingResult","","Result of a partial aggregation job performed by a clerk.",null,null],[12,"job","","Associated clerking job.",16,null],[12,"clerk","","Executing clerk.",16,null],[12,"encryption","","Encryption of combined shares.",16,null],[3,"AggregationStatus","","Current status of an aggregation.",null,null],[12,"aggregation","","Associated aggregation.",17,null],[12,"number_of_participations","","Current number of participations received.",17,null],[12,"snapshots","","Associated anapshots and their status for this aggregation.",17,null],[3,"SnapshotStatus","","Current status of a snapshot.",null,null],[12,"id","","Unique identifier.",18,null],[12,"number_of_clerking_results","","Current number of clerking results received.",18,null],[12,"result_ready","","Indication of whether a result of the aggregation can be produced from the current clerking results.",18,null],[3,"SnapshotResult","","Result of an aggregation snapshot, including output, ready for reconstruction.",null,null],[12,"snapshot","","Associated snapshot.",19,null],[12,"number_of_participations","","Number of participations used in this result.",19,null],[12,"clerk_encryptions","","Encrypted shares of the masked result.",19,null],[12,"recipient_encryptions","","Encrypted mask for the result.",19,null],[3,"Pong","","Return message given by the `ping` service call.",null,null],[12,"running","","Indication of whether the service believes everything to running correctly.",20,null],[4,"SdaErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",21,null],[13,"SerdeJson","","",21,null],[13,"PermissionDenied","","",21,null],[13,"InvalidCredentials","","",21,null],[13,"Invalid","","",21,null],[4,"Encryption","","Encryption (or ciphertext).",null,null],[13,"Sodium","","Standard sodium encryption (Curve25519, XSalsa20, Poly1305).",22,null],[4,"EncryptionKey","","Encryption key (aka public key).",null,null],[13,"Sodium","","Standard sodium encryption key (Curve25519, XSalsa20, Poly1305).",23,null],[4,"Signature","","Signature.",null,null],[13,"Sodium","","Standard sodium signature (Ed25519).",24,null],[4,"SigningKey","","Signing key for signatures.",null,null],[13,"Sodium","","Standard sodium signature key (Ed25519).",25,null],[4,"VerificationKey","","Verification key for signatures.",null,null],[13,"Sodium","","Standard sodium verifacation key (Ed25519).",26,null],[4,"LinearMaskingScheme","","Supported masking schemes and their parameters.",null,null],[13,"None","","No masking, i.e. secrets are shared direction to the clerks.",27,null],[13,"Full","","Secure masking, using fresh randomness from the underlying operation system for each secret.",27,null],[12,"modulus","sda_protocol::LinearMaskingScheme","",27,null],[13,"ChaCha","sda_protocol","Secure masking, using a small random seed to derive masks (`rand::chacha::ChaChaRng`).",27,null],[12,"modulus","sda_protocol::LinearMaskingScheme","",27,null],[12,"dimension","","",27,null],[12,"seed_bitsize","","",27,null],[4,"LinearSecretSharingScheme","sda_protocol","Supported secret sharing schemes and their parameters.",null,null],[13,"Additive","","Computionally efficient basic scheme.",28,null],[12,"share_count","sda_protocol::LinearSecretSharingScheme","Number of shares to generate for each secret.",28,null],[12,"modulus","","Modulus specifying the additive group in which to operate.",28,null],[13,"PackedShamir","sda_protocol","Packed Shamir scheme allowing for work to be distributed across many clerks.",28,null],[12,"secret_count","sda_protocol::LinearSecretSharingScheme","Dimension of secrets, i.e. number of components in vector.",28,null],[12,"share_count","","Number of shares to generate for each vector of secrets.",28,null],[12,"privacy_threshold","","Number of shares needed to reconstruct.",28,null],[12,"prime_modulus","","Prime number specifying the prime field in which to operate.",28,null],[12,"omega_secrets","","TODO",28,null],[12,"omega_shares","","TODO",28,null],[4,"AdditiveEncryptionScheme","sda_protocol","Supported additive encryption schemes and their parameters.",null,null],[13,"Sodium","","Standard sodium encryption (Curve25519, XSalsa20, Poly1305).",29,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",0,{"inputs":[{"name":"sdaerrorkind"},{"name":"state"}],"output":{"name":"sdaerror"}}],[11,"from_kind","","",0,null],[11,"with_chain","","",0,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",0,null],[11,"iter","","",0,{"inputs":[{"name":"self"}],"output":{"name":"errorchainiter"}}],[11,"backtrace","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,{"inputs":[{"name":"sdaerrorkind"}],"output":{"name":"sdaerror"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",0,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"sdaerror"}}],[11,"kind","","Returns the kind of the error.",0,{"inputs":[{"name":"self"}],"output":{"name":"sdaerrorkind"}}],[11,"iter","","Iterates over the error chain.",0,{"inputs":[{"name":"self"}],"output":{"name":"errorchainiter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"sdaerrorkind"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",0,null],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",21,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",21,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",21,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",21,{"inputs":[{"name":"sdaerror"}],"output":{"name":"self"}}],[0,"helpers","","Various helper traits, structs, methods, and macros.",null,null],[3,"Signed","sda_protocol::helpers","Abstract object for signed message together with the signature and claimed signer.",null,null],[12,"signature","","",30,null],[12,"signer","","",30,null],[12,"body","","",30,null],[3,"Labelled","","Abstract object for messages labelled by some form of identifier.",null,null],[12,"id","","",31,null],[12,"body","","",31,null],[3,"Binary","","Blob of binary data.",null,null],[12,"0","","",32,null],[5,"label","","",null,{"inputs":[{"name":"id"},{"name":"m"}],"output":{"name":"labelled"}}],[8,"Identified","","Trait for objects with associated unique identifiers.",null,null],[16,"I","","",33,null],[10,"id","","",33,null],[8,"Id","","Trait for unique identifiers.",null,null],[8,"Sign","","Abstract trait for objects that may be signed.",null,null],[10,"canonical","","Generate a canonical representation of the object.",34,{"inputs":[{"name":"self"}],"output":{"name":"sdaresult"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"signed"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"signed"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"signed"}],"output":{"name":"bool"}}],[11,"deref","","",30,{"inputs":[{"name":"self"}],"output":{"name":"m"}}],[11,"id","","",30,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"labelled"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"labelled"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"labelled"}],"output":{"name":"bool"}}],[11,"id","","",31,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"binary"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"serialize","","",32,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",32,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","sda_protocol","",22,{"inputs":[{"name":"self"}],"output":{"name":"encryption"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"encryption"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"encryption"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"encryptionkey"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"encryptionkey"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"encryptionkey"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"signature"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"signingkey"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"signingkey"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"signingkey"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"verificationkey"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"verificationkey"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"verificationkey"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"linearmaskingscheme"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"linearmaskingscheme"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"linearmaskingscheme"}],"output":{"name":"bool"}}],[11,"has_mask","","Derived property indicating whether or not this scheme results in masks being generated or not.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"linearsecretsharingscheme"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"linearsecretsharingscheme"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"linearsecretsharingscheme"}],"output":{"name":"bool"}}],[11,"input_size","","Number of secrets shared together.",28,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"output_size","","Number of shares output by the scheme, which must match the number of clerks in the aggregation's committee.",28,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"privacy_threshold","","Upper bound for the number of clerks that must collaborate with the server before privacy is leaked.",28,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"reconstruction_threshold","","Lower bound for the number of clerks needed to correctly reconstruct.",28,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"additiveencryptionscheme"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"additiveencryptionscheme"}],"output":{"name":"bool"}}],[11,"batch_size","","",29,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"verificationkeyid"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"verificationkeyid"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"verificationkeyid"}],"output":{"name":"bool"}}],[11,"random","","Create new random id.",1,{"inputs":[],"output":{"name":"verificationkeyid"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"verificationkeyid"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"to_string","","",1,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"serialize","","",1,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",1,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"agent"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"agent"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"agent"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"agentid"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"agentid"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"agentid"}],"output":{"name":"bool"}}],[11,"random","","Create new random id.",3,{"inputs":[],"output":{"name":"agentid"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"agentid"}}],[11,"from_str","","",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"to_string","","",3,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"serialize","","",3,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",3,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"id","","",2,{"inputs":[{"name":"self"}],"output":{"name":"agentid"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"profile"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"profile"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"profile"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"profile"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"encryptionkeyid"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"encryptionkeyid"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"encryptionkeyid"}],"output":{"name":"bool"}}],[11,"random","","Create new random id.",5,{"inputs":[],"output":{"name":"encryptionkeyid"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"encryptionkeyid"}}],[11,"from_str","","",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"to_string","","",5,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"serialize","","",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",5,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"aggregation"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"aggregation"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"aggregation"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"aggregationid"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",7,null],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"aggregationid"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"aggregationid"}],"output":{"name":"bool"}}],[11,"random","","Create new random id.",7,{"inputs":[],"output":{"name":"aggregationid"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"aggregationid"}}],[11,"from_str","","",7,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"to_string","","",7,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"serialize","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",7,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"id","","",6,{"inputs":[{"name":"self"}],"output":{"name":"aggregationid"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"clerkcandidate"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"committee"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"committee"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"committee"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"participation"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"participation"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"participation"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"participationid"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"participationid"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"participationid"}],"output":{"name":"bool"}}],[11,"random","","Create new random id.",11,{"inputs":[],"output":{"name":"participationid"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"participationid"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"to_string","","",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"serialize","","",11,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",11,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"id","","",10,{"inputs":[{"name":"self"}],"output":{"name":"participationid"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"snapshot"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"snapshot"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"snapshot"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"snapshotid"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",13,null],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"snapshotid"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"snapshotid"}],"output":{"name":"bool"}}],[11,"random","","Create new random id.",13,{"inputs":[],"output":{"name":"snapshotid"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"snapshotid"}}],[11,"from_str","","",13,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"to_string","","",13,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"serialize","","",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",13,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"id","","",12,{"inputs":[{"name":"self"}],"output":{"name":"snapshotid"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"clerkingjob"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"clerkingjob"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"clerkingjob"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"clerkingjobid"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",15,null],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"clerkingjobid"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"clerkingjobid"}],"output":{"name":"bool"}}],[11,"random","","Create new random id.",15,{"inputs":[],"output":{"name":"clerkingjobid"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"clerkingjobid"}}],[11,"from_str","","",15,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"to_string","","",15,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"serialize","","",15,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",15,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"id","","",14,{"inputs":[{"name":"self"}],"output":{"name":"clerkingjobid"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"clerkingresult"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"clerkingresult"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"clerkingresult"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"snapshotstatus"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"snapshotstatus"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"pong"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"pong"}],"output":{"name":"bool"}}],[0,"byte_arrays","","Typed binary arrays of specific sizes.",null,null],[3,"B8","sda_protocol::byte_arrays","",null,null],[12,"0","","",35,null],[3,"B32","","",null,null],[12,"0","","",36,null],[3,"B64","","",null,null],[12,"0","","",37,null],[11,"serialize","","",35,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",35,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"b8"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",35,{"inputs":[],"output":{"name":"b8"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"b8"}],"output":{"name":"bool"}}],[11,"deref","","",35,null],[11,"from","","",35,null],[11,"serialize","","",36,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",36,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"b32"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"b32"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"b32"}],"output":{"name":"bool"}}],[11,"deref","","",36,null],[11,"from","","",36,null],[11,"serialize","","",37,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",37,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"b64"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"b64"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"b64"}],"output":{"name":"bool"}}],[11,"deref","","",37,null],[11,"from","","",37,null],[6,"SdaResult","sda_protocol","Convenient wrapper around `std::Result`.",null,null],[6,"LabelledVerificationKey","","Verification key and its associated id.",null,null],[6,"SignedEncryptionKey","","Encryption key with its associated, signed by the owner of the corresponding keypair.",null,null],[8,"SdaResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns *some type that can be converted to `ErrorKind`*, boxes the original error to store as the cause, then returns a new error containing the original error.",38,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[8,"SdaService","","Combined SDA services.",null,null],[8,"SdaBaseService","","Basic methods for all SDA services.",null,null],[10,"ping","","Send a ping to the service, expecting a pong in return if everything appears to be running.",39,{"inputs":[{"name":"self"}],"output":{"name":"sdaresult"}}],[8,"SdaAgentService","","Methods used mainly for discovering and maintaining agents and their identities.",null,null],[10,"create_agent","","Create an agent.",40,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"agent"}],"output":{"name":"sdaresult"}}],[10,"get_agent","","Retrieve the agent description.",40,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"agentid"}],"output":{"name":"sdaresult"}}],[10,"upsert_profile","","Register the given public profile; updates any existing profile.",40,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"profile"}],"output":{"name":"sdaresult"}}],[10,"get_profile","","Retrieve the associated public profile.",40,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"agentid"}],"output":{"name":"sdaresult"}}],[10,"create_encryption_key","","Register new encryption key for agent.",40,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"signedencryptionkey"}],"output":{"name":"sdaresult"}}],[10,"get_encryption_key","","Retrieve agent encryption key.",40,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"encryptionkeyid"}],"output":{"name":"sdaresult"}}],[8,"SdaAggregationService","","Methods used mainly for discovering aggregation objects.",null,null],[10,"list_aggregations","","Search for aggregations optionally filtering by title substring and/or recipient.",41,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"option"},{"name":"option"}],"output":{"name":"sdaresult"}}],[10,"get_aggregation","","Retrieve an aggregation and its description.",41,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"aggregationid"}],"output":{"name":"sdaresult"}}],[10,"get_committee","","Retrieve the associated committee.",41,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"aggregationid"}],"output":{"name":"sdaresult"}}],[8,"SdaParticipationService","","Methods used for participation in particular.",null,null],[10,"create_participation","","Provide user input to an aggregation.",42,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"participation"}],"output":{"name":"sdaresult"}}],[8,"SdaClerkingService","","Methods used for clerking in particular.",null,null],[10,"get_clerking_job","","Pull any job waiting to be performed by the speficied clerk.",43,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"agentid"}],"output":{"name":"sdaresult"}}],[10,"create_clerking_result","","Push the result of a finished job.",43,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"clerkingresult"}],"output":{"name":"sdaresult"}}],[8,"SdaRecipientService","","Methods used by the recipient in particular.",null,null],[10,"create_aggregation","","Create a new aggregation on the service (without any associated result). If successful, the original id has been replaced by the returned id.",44,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"aggregation"}],"output":{"name":"sdaresult"}}],[10,"delete_aggregation","","Delete all information (including results) regarding an aggregation.",44,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"aggregationid"}],"output":{"name":"sdaresult"}}],[10,"suggest_committee","","Propose suitable members for a committee, taking into account the aggregation constraints.",44,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"aggregationid"}],"output":{"name":"sdaresult"}}],[10,"create_committee","","Set the committee for an aggregation.",44,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"committee"}],"output":{"name":"sdaresult"}}],[10,"get_aggregation_status","","Poll status of an aggregation.",44,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"aggregationid"}],"output":{"name":"sdaresult"}}],[10,"create_snapshot","","Create a snapshot for an aggregation.",44,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"snapshot"}],"output":{"name":"sdaresult"}}],[10,"get_snapshot_result","","Retrieve results of an aggregation.",44,{"inputs":[{"name":"self"},{"name":"agent"},{"name":"aggregationid"},{"name":"snapshotid"}],"output":{"name":"sdaresult"}}]],"paths":[[3,"SdaError"],[3,"VerificationKeyId"],[3,"Agent"],[3,"AgentId"],[3,"Profile"],[3,"EncryptionKeyId"],[3,"Aggregation"],[3,"AggregationId"],[3,"ClerkCandidate"],[3,"Committee"],[3,"Participation"],[3,"ParticipationId"],[3,"Snapshot"],[3,"SnapshotId"],[3,"ClerkingJob"],[3,"ClerkingJobId"],[3,"ClerkingResult"],[3,"AggregationStatus"],[3,"SnapshotStatus"],[3,"SnapshotResult"],[3,"Pong"],[4,"SdaErrorKind"],[4,"Encryption"],[4,"EncryptionKey"],[4,"Signature"],[4,"SigningKey"],[4,"VerificationKey"],[4,"LinearMaskingScheme"],[4,"LinearSecretSharingScheme"],[4,"AdditiveEncryptionScheme"],[3,"Signed"],[3,"Labelled"],[3,"Binary"],[8,"Identified"],[8,"Sign"],[3,"B8"],[3,"B32"],[3,"B64"],[8,"SdaResultExt"],[8,"SdaBaseService"],[8,"SdaAgentService"],[8,"SdaAggregationService"],[8,"SdaParticipationService"],[8,"SdaClerkingService"],[8,"SdaRecipientService"]]};
initSearch(searchIndex);
